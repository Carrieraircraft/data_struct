// MyProject.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//
//公众号：程序员速成 ，内含一辈子都让你感激自己的优质视频教程，欢迎关注


#include <iostream>
#include <list>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <assert.h>
#include <sstream>
#include <stack>

#pragma warning (disable: 4996) 
using namespace std;



int main()
{	
	_CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);//程序退出时检测内存泄漏并显示到“输出”窗口

	//第4章 图
	//第一节 图的基本概念、术语
	//(1)顶点（v-Vertex）、边(e-Edge)、阶、
	//图(Graph)：由顶点的有穷非空集合和顶点之间的连线（边）的集合组成。G=(V,E)。V(G)：图G中的顶点集合。E(G)代表图中的边集合
	//|V|表示G中的顶点个数，也称为G的阶。|E|表示图G中边的条数。
	
	//(2)无向图、有向图、简单图、多重图、完全图
	//无向边（边）。无向图。有向边（弧），有向图。
	//互相到达（A,B）,(B,A)，用圆括号表示无向边。
	//弧尾，弧头<A,B>
	//简单图（数据结构中只讨论这种）：不存在顶点到其自身的边，并且同一条边不会重复出现——简单无向图，简单有向图。
	//多重图（不在讨论之中）：分为多重无向图和多重有向图
	//无向完全图：无向图中，如果任意两个顶点之间都存在边，则称该图为无向完全图
	 //含有n个顶点的无向完全图有 ( n*(n-1)) / 2 条边。
	//有向完全图：有向图中，如果任意两个顶点之间都存在方向相反的两条弧，称该图为有向完全图。
	 //含有n个顶点的有向完全图有n*(n-1)条边。
	//稀疏图，稠密图。

	//(3)顶点的度、入度、出度
	//无向图顶点v的度是和v相关联的边的数目，记为TD(v)
	//无向图中所有顶点的度之和就应该是边数*2，即2*|E|
	//有向图中，以顶点v为终点（箭头指向v）的有向边的数目称为顶点的入度（InDegree），记为ID(v)。
	 //以顶点v为起点的有向边的数目称为顶点v的出度（OutDegree），记为OD(v)。所有有向图中顶点v的度等于其入度和出度之和。
	   //TD(v)=ID(v)+OD(v)。
	//有向图中，所有顶点的入度之和与出度之和相等并且等于弧的数量。

	//(4)顶点之间的关系、路径、边
	//第一个顶点和最后一个顶点相同的路径称为回路或者环
	//简单路径：在路径序列中，顶点不重复出现的路径称为简单路径。
	//简单回路/简单环：除第一个顶点和最后一个顶点，其余顶点不重复出现的回路叫简单回路或者简单环
	//路径长度：路径上边或者弧的数目。
	//点到点的距离：从顶点Vm到Vn的最短路径如果存在，则此路径的长度称为从顶点Vm到顶点Vn的距离。
	   //如果Vm到Vn之间不存在路径，则称他们之间的距离为无穷∞。
	//连通的：
	//顶点强连通的：
	//权（权值）：与边或者弧相关数字
	//带权图（网）

	//（5）连通图、子网
	//连通图：若无向图中任意两个顶点都是连通的，则称图为连通图，否则称为非连通图。
	//  a：对于具有n个顶点的无向图，如果是连通图，则最少要有n-1条边。
	//  b: 对于具有n个顶点的无向图，如果是非连通的，则最多只能有((n-1)*(n-2))/2条边。
	//强连通图：若有向图中任意一对顶点都是强连通的，则称此图为强连通图。
	//  对于有n个顶点的有向图，若是强连通图，则最少要有n条边以构成回路
	//子图，生成子图。
	//连通分量：无向图中的极大连通子图称为连通分量。
	//强连通分量：有向图中极大强连通（强连通：两两可达）子图称为强连通分量。

	//(6)生成树、生成森林
	//一个无向连通图的生成树是包含图中全部顶点的一个极小的连通子图。这里极小指边尽可能要少。
	 //如果一个无向图有n个顶点和小于n-1条边，则肯定是非连通图。如果它多于n-1条边，则一定有回路（环）；
	//当图是带权图时，一条路径上所有边的权值之和称为带权路径长度。
	//在无向非连通图中，连通分量的生成树构成了无向非连通图的生成森林

	//(7)树，有向树
	//在无向图中，树是连通且不存在回路的。
	//具有n个顶点的树，必然会有n-1条边（否则一定会是有回路的）。
	//在有向图中，一个顶点的入度为0，其余顶点入度均为1，称为有向树。




	

}


// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门使用技巧:  ∞
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误nm,
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件



