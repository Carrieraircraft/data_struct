// MyProject.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//
//公众号：程序员速成 ，内含一辈子都让你感激自己的优质视频教程，欢迎关注


#include <iostream>
#include <list>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <assert.h>
#include <sstream>
#include <stack>
#include <queue>



#pragma warning (disable: 4996) 
using namespace std;


int main()
{
	_CrtSetDbgFlag(_CRTDBG_ALLOC_MEM_DF | _CRTDBG_LEAK_CHECK_DF);//程序退出时检测内存泄漏并显示到“输出”窗口


	//第6章 跳表与哈希表
	//第一节 跳表（Skip List）
	//（1）基本概念，在跳表中查询及复杂度分析
	//跳表：基于链表，是对链表的优化
	 //跳表是只能在链表中的元素有序的情况下使用的数据结构。
	//插入，删除，搜索时间复杂度都是O(log n)
	//把增加了索引的原始有序链表称为跳表，跳表基于原始的有序链表，是在原始的有序链表智商增加了一级或者多级索引而构成。
	// 
	//（2）在跳表中插入数据:需要先向跳表的原始链表中插入数据（从下到上插入）
	//3、1、7、6、9、5、15、12
	//（3）从跳表中删除数据
	//从上到下


	

}


	// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
	// 调试程序: F5 或调试 >“开始调试”菜单

	// 入门使用技巧:
	//   1. 使用解决方案资源管理器窗口添加/管理文件
	//   2. 使用团队资源管理器窗口连接到源代码管理
	//   3. 使用输出窗口查看生成输出和其他消息
	//   4. 使用错误列表窗口查看错误nm,
	//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
	//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件



